---
- name: "Set correct owner of full nexus data directory"
  file:
    path: "/{{DATACORE}}/nexus"
    owner: 200
    group: 200
    recurse: yes

- name: "Remove previous nexus tmp directory"
  file:
     path: "/tmp/nexus"
     state: absent

- name: "Clone Nexus repository"
  git:
    repo: "https://github.com/sonatype/docker-nexus3.git"
    dest: "/tmp/nexus"
    accept_hostkey: yes
    force: yes
    recursive: no
    version: master
  become: true
  become_user: "{{ USER_NAME }}"

- name: "Build nexus image and with buildargs"
  docker_image:
     path: "/tmp/nexus"
     name: "nexus"
     tag: "{{ NEXUS_VERSION }}"
     dockerfile: "Dockerfile"
     buildargs:
       NEXUS_VERSION: "{{ NEXUS_VERSION }}"
       NEXUS_DOWNLOAD_SHA256_HASH: "{{ NEXUS_SHA }}"

- name: "Launch nexus container {{ NEXUS_VERSION }}"
  docker_container:
    name: "nexus"
    image: "nexus:{{ NEXUS_VERSION }}"
    state: started
    restart_policy: always
    recreate: yes
    ports:
      - "{{ NEXUS_PORT }}:8081"
      - "{{ NEXUS_DOCKER_PULL_PORT }}:{{ NEXUS_DOCKER_PULL_PORT }}"
      - "{{ NEXUS_DOCKER_PUSH_PORT }}:{{ NEXUS_DOCKER_PUSH_PORT }}"
    labels:
      traefik.enable: "{{ NEXUS_EXPOSITION }}"
      traefik.http.services.nexus.loadbalancer.server.port: "8081"
      traefik.http.middlewares.https_redirect.redirectscheme.scheme: "https"
      traefik.http.routers.nexus_http.middlewares: "https_redirect"
      traefik.http.routers.nexus_http.rule: "Host(`{{ NEXUS_EXTERNAL_URL }}`)"
      traefik.http.routers.nexus_https.rule: "Host(`{{ NEXUS_EXTERNAL_URL }}`)"
      traefik.http.routers.nexus_https.tls: "true"
    volumes:
      - "/{{ DATACORE }}/nexus:/nexus-data"

- name: "Wait for Nexus to start up"
  uri:
    url: "http://localhost:{{ NEXUS_PORT }}"
    status_code: "200,403"
    timeout: 40
  register: nexus_service_status
  # Keep trying for 5 mins in 5 sec intervals
  retries: "{{ NEXUS_RESTART_DELAY }}"
  delay: 30
  until: nexus_service_status['status'] == 200 or nexus_service_status['status'] == 403

- name: "Read nexus admin password file content"
  shell: cat /{{ DATACORE }}/nexus/admin.password
  register: admin_password_file_content
  ignore_errors: yes
  no_log: true

- name: "Use default password if by default"
  set_fact:
    current_nexus_admin_password: "{{ admin_password_file_content.stdout }}"
  no_log: true
  when: admin_password_file_content.failed == false

- name: "Check nexus connection with status API and defaut password"
  uri:
    url: "http://localhost:{{ NEXUS_PORT }}/service/rest/v1/status"
    user: 'admin'
    password: "{{ current_nexus_admin_password }}"
    method: GET
    force_basic_auth: yes
    status_code: 200
  register: nexus_api_status
  ignore_errors: yes

- name: "Use new password if needed if default one doesn't works"
  set_fact:
    current_nexus_admin_password: "{{ NEXUS_ADMIN_PASS }}"
  no_log: true
  when: nexus_api_status.failed == true

- name: "Removing (potential) previously declared Groovy scripts"
  uri:
    url: "http://localhost:{{ NEXUS_PORT }}/service/rest/v1/script/{{ item }}"
    user: 'admin'
    password: "{{ current_nexus_admin_password }}"
    method: DELETE
    force_basic_auth: yes
    status_code: 204,404,405
  with_items:
    - setup_repositories
    - bypass_wizard

- name: "Declaring up-to-date Groovy scripts"
  uri:
    url: "http://localhost:{{ NEXUS_PORT }}/service/rest/v1/script"
    user: 'admin'
    password: "{{ current_nexus_admin_password }}"
    body_format: json
    method: POST
    force_basic_auth: yes
    status_code: 204
    body:
      name: "{{ item }}"
      type: 'groovy'
      content: "{{ lookup('file', 'files/nexus/' + item + '.groovy') }}"
  with_items:
    - setup_repositories
    - bypass_wizard

- name: "Execute Groovy scripts"
  uri:
    url: "http://localhost:{{ NEXUS_PORT }}/service/rest/v1/script/{{ item }}/run"
    user: 'admin'
    password: "{{ current_nexus_admin_password }}"
    body_format: json
    method: POST
    force_basic_auth: yes
    status_code: 200,204
    body:
      admin_name: "{{Â DEFAULT_ADMIN_NAME }}"
      admin_password: "{{ NEXUS_ADMIN_PASS }}"
      docker_push_port: "{{ NEXUS_DOCKER_PUSH_PORT }}"
      docker_pull_port: "{{ NEXUS_DOCKER_PULL_PORT }}"
  with_items:
    - setup_repositories
    - bypass_wizard

# Voir avec:
# https://blog.mimacom.com/automate-nexus/
# https://blog.savoirfairelinux.com/en-ca/2017/ansible-nexus-repository-manager/
# https://blog.savoirfairelinux.com/fr-ca/2017/ansible-nexus-repository-manager/
# https://github.com/savoirfairelinux/ansible-nexus3-oss/tree/master/tasks
# https://github.com/ansible-ThoTeam/nexus3-oss/blob/master/tasks/declare_script_each.yml
# https://github.com/sonatype-nexus-community/nexus-scripting-examples/blob/master/complex-script/npmAndBowerRepositories.groovy
# https://github.com/sonatype/nexus-public/blob/master/plugins/nexus-script-plugin/src/main/java/org/sonatype/nexus/script/plugin/RepositoryApi.java
