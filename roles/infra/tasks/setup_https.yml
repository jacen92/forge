---
- name: "Setup traefik directory"
  file:
    path: "/{{ DATACORE }}/traefik"
    owner: "{{ USER_NAME }}"
    group: "{{ USER_NAME }}"
    state: directory

- name: "Copy traefik configuration in traefik directory"
  template:
    src: files/traefik/traefik.tml
    dest: "/{{ DATACORE }}/traefik/traefik.toml"
    owner: "{{ USER_NAME }}"
    group: "{{ USER_NAME }}"
    mode: 0644

# from: https://www.sheevaboite.fr/articles/traefik-reverse-proxy-https-containers-docker
- name: "Launch traefik container for ARM {{ TRAEFIK_VERSION }}"
  docker_container:
    name: "traefik"
    image: "arm32v6/traefik:{{ TRAEFIK_VERSION }}"
    state: started
    restart_policy: always
    recreate: yes
    timeout: "{{ DOCKER_TIMEOUT }}"
    ports:
      - "80:80"
      - "443:443"
      - "{{ TRAEFIK_FRONT_PORT }}:8080"
    labels:
      traefik.enable: "{{ TRAEFIK_EXPOSITION }}"
      traefik.http.routers.traefik.loadbalancer.server.port: "8080"
      traefik.http.middlewares.https_redirect.redirectscheme.scheme: "https"
      traefik.http.routers.traefik_http.middlewares: "https_redirect"
      traefik.http.routers.traefik_http.rule: "Host(`{{ TRAEFIK_EXTERNAL_URL }}`)"
      traefik.http.routers.traefik_https.rule: "Host(`{{ TRAEFIK_EXTERNAL_URL }}`)"
      traefik.http.routers.traefik_https.tls: "true"
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock"
      - "/{{ DATACORE }}/traefik/certs/:/certs/"
      - "/{{ DATACORE }}/traefik:/etc/traefik"
  when: ansible_architecture in ["armv7l"]

- name: "Launch traefik container for ARM64 {{ TRAEFIK_VERSION }}"
  docker_container:
    name: "traefik"
    image: "arm64v8/traefik:{{ TRAEFIK_VERSION }}"
    state: started
    restart_policy: always
    recreate: yes
    timeout: "{{ DOCKER_TIMEOUT }}"
    ports:
      - "80:80"
      - "443:443"
      - "{{ TRAEFIK_FRONT_PORT }}:8080"
    labels:
      traefik.enable: "{{ TRAEFIK_EXPOSITION }}"
      traefik.http.services.traefik.loadbalancer.server.port: "8080"
      traefik.http.middlewares.https_redirect.redirectscheme.scheme: "https"
      traefik.http.routers.traefik_http.middlewares: "https_redirect"
      traefik.http.routers.traefik_http.rule: "Host(`{{ TRAEFIK_EXTERNAL_URL }}`)"
      traefik.http.routers.traefik_https.rule: "Host(`{{ TRAEFIK_EXTERNAL_URL }}`)"
      traefik.http.routers.traefik_https.tls: "true"
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock"
      - "/{{ DATACORE }}/traefik/certs/:/certs/"
      - "/{{ DATACORE }}/traefik:/etc/traefik"
  when: ansible_architecture in ["aarch64"]

- name: "Launch traefik container for x64 {{ TRAEFIK_VERSION }}"
  docker_container:
    name: "traefik"
    image: "traefik:{{ TRAEFIK_VERSION }}"
    state: started
    restart_policy: always
    recreate: yes
    timeout: "{{ DOCKER_TIMEOUT }}"
    ports:
      - "80:80"
      - "443:443"
      - "{{ TRAEFIK_FRONT_PORT }}:8080"
    labels:
      traefik.enable: "{{ TRAEFIK_EXPOSITION }}"
      traefik.http.services.traefik.loadbalancer.server.port: "8080"
      traefik.http.middlewares.https_redirect.redirectscheme.scheme: "https"
      traefik.http.routers.traefik_http.middlewares: "https_redirect"
      traefik.http.routers.traefik_http.rule: "Host(`{{ TRAEFIK_EXTERNAL_URL }}`)"
      traefik.http.routers.traefik_https.rule: "Host(`{{ TRAEFIK_EXTERNAL_URL }}`)"
      traefik.http.routers.traefik_https.tls: "true"
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock"
      - "/{{ DATACORE }}/traefik/certs/:/certs/"
      - "/{{ DATACORE }}/traefik:/etc/traefik"
  when: ansible_architecture in ["amd64", "x86_64"]

- name: "Sleep for 30 seconds to let traefik starts"
  wait_for: timeout=30
  delegate_to: 127.0.0.1
  vars:
    ansible_python_interpreter: python

- name: "Make sure the certificate file has the correct rights"
  file:
    path: "/{{ DATACORE }}/traefik/certs/acme.json"
    owner: "root"
    group: "root"
    mode: 0600
