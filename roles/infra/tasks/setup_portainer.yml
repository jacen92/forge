---
- name: "Setup portainer directory"
  file:
    path: "/{{ DATACORE }}/portainer"
    owner: "{{ USER_NAME }}"
    group: "{{ USER_NAME }}"
    state: directory

- name: "Define portainer_image Arm?"
  set_fact:
     portainer_image: "portainer/portainer:linux-arm-{{ PORTAINER_VERSION }}"
  when: ansible_architecture in ["armv7l"]

- name: "Define portainer_image 64bits?"
  set_fact:
     portainer_image: "portainer/portainer:{{ PORTAINER_VERSION }}"
  when: ansible_architecture in ["aarch64", "amd64", "x86_64"]

- name: "Generate portainer password"
  shell: 'htpasswd -nb -B admin {{ PORTAINER_PASS }} | cut -d ":" -f 2'
  register: portainer_password

- name: "Launch portainer container {{ PORTAINER_VERSION }}"
  docker_container:
    name: "portainer"
    image: "{{ portainer_image }}"
    state: started
    #restart_policy: always
    #recreate: yes
    timeout: "{{ DOCKER_TIMEOUT }}"
    command: ["-H", "unix:///var/run/docker.sock", "--admin-password='{{ portainer_password.stdout }}'"]
#    ports:
#      - "{{Â PORTAINER_PORT }}:9000"
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock"
      - "/{{ DATACORE }}/portainer:/data"
    labels:
      traefik.enable: "true"
      traefik.http.services.portainer.loadbalancer.server.port: "9000"
      traefik.http.middlewares.https_redirect.redirectscheme.scheme: "https"
      traefik.http.routers.portainer_http.middlewares: "https_redirect"
      traefik.http.routers.portainer_http.rule: "Host(`{{ PORTAINER_EXTERNAL_URL }}`)"
      traefik.http.routers.portainer_http.service: portainer
      traefik.http.routers.portainer_https.rule: "Host(`{{ PORTAINER_EXTERNAL_URL }}`)"
      traefik.http.routers.portainer_https.service: portainer
      traefik.http.routers.portainer_https.tls: "true"

      # add this to use traefik as a proxy with tls (http will not be available)
      traefik.http.services.portainer_proxy.loadbalancer.server.port: "9000"
      traefik.http.routers.portainer_proxy.service: portainer_proxy
      traefik.http.routers.portainer_proxy.entrypoints: portainer
      traefik.http.routers.portainer_proxy.rule: "{{ global_proxy_rule }}"
      traefik.http.routers.portainer_proxy.tls: "true"
  when: portainer_image is defined
