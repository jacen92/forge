---
- name: "Setup portainer directory"
  file:
    path: "/{{ DATACORE }}/portainer"
    owner: "{{ USER_NAME }}"
    group: "{{ USER_NAME }}"
    state: directory

- name: "Launch portainer container for ARM {{ PORTAINER_VERSION }}"
  docker_container:
    name: "portainer"
    image: "portainer/portainer:linux-arm-{{ PORTAINER_VERSION }}"
    state: started
    restart_policy: always
    recreate: yes
    timeout: "{{ DOCKER_TIMEOUT }}"
    ports:
      - "{{ PORTAINER_PORT }}:9000"
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock"
      - "/{{ DATACORE }}/portainer:/data"
    labels:
      traefik.enable: "{{ PORTAINER_EXPOSITION }}"
      traefik.http.services.portainer.loadbalancer.server.port: "9000"
      traefik.http.middlewares.https_redirect.redirectscheme.scheme: "https"
      traefik.http.routers.portainer_http.middlewares: "https_redirect"
      traefik.http.routers.portainer_http.rule: "Host(`{{ PORTAINER_EXTERNAL_URL }}`)"
      traefik.http.routers.portainer_https.rule: "Host(`{{ PORTAINER_EXTERNAL_URL }}`)"
      traefik.http.routers.portainer_https.tls: "true"
  when: ansible_architecture in ["armv7l"]

- name: "Launch portainer container {{ PORTAINER_VERSION }}"
  docker_container:
    name: "portainer"
    image: "portainer/portainer:{{ PORTAINER_VERSION }}"
    state: started
    restart_policy: always
    recreate: yes
    timeout: "{{ DOCKER_TIMEOUT }}"
    ports:
      - "{{ PORTAINER_PORT }}:9000"
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock"
      - "/{{ DATACORE }}/portainer:/data"
    labels:
      traefik.enable: "{{ PORTAINER_EXPOSITION }}"
      traefik.http.services.portainer.loadbalancer.server.port: "9000"
      traefik.http.middlewares.https_redirect.redirectscheme.scheme: "https"
      traefik.http.routers.portainer_http.middlewares: "https_redirect"
      traefik.http.routers.portainer_http.rule: "Host(`{{ PORTAINER_EXTERNAL_URL }}`)"
      traefik.http.routers.portainer_https.rule: "Host(`{{ PORTAINER_EXTERNAL_URL }}`)"
      traefik.http.routers.portainer_https.tls: "true"
  when: ansible_architecture in ["aarch64", "amd64", "x86_64"]
