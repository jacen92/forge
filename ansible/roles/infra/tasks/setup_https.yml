---
- name: "Setup traefik directory"
  ansible.builtin.file:
    path: "/{{ DATACORE }}/{{ item }}"
    owner: "{{ USER_NAME }}"
    group: "{{ USER_NAME }}"
    state: directory
  with_items:
    - traefik
    - traefik/certs

- name: "Copy traefik configurations in traefik directory"
  ansible.builtin.template:
    src: "files/traefik/{{ item }}"
    dest: "/{{ DATACORE }}/traefik/{{ item }}"
    owner: "{{ USER_NAME }}"
    group: "{{ USER_NAME }}"
    mode: 0644
  with_items:
    - traefik.toml

- name: "Copy traefik configurations in traefik directory"
  ansible.builtin.template:
    src: "files/traefik/{{ item }}"
    dest: "/{{ DATACORE }}/traefik/{{ item }}"
    owner: "{{ USER_NAME }}"
    group: "{{ USER_NAME }}"
    mode: 0644
  with_items:
    - tls-certs.toml

- name: "Copy traefik certificates in traefik directory"
  ansible.builtin.copy:
    src: "identity/{{ IDENTITY }}/certs/{{ item.file }}"
    dest: "/{{ DATACORE }}/traefik/certs/{{ item.file }}"
    owner: "{{ USER_NAME }}"
    group: "{{ USER_NAME }}"
    mode: "{{ item.mode }}"
  with_items:
    - {file: "{{ DOMAIN_CERT_KEY_NAME | default('default-key.pem') }}", mode: 600}
    - {file: "{{ DOMAIN_CERT_NAME | default('default.pem') }}", mode: 644}

# from: https://www.sheevaboite.fr/articles/traefik-reverse-proxy-https-containers-docker
- name: "Launch traefik container version {{ TRAEFIK_VERSION }}"
  community.general.docker_container:
    name: "traefik"
    image: "traefik:{{ TRAEFIK_VERSION }}"
    state: started
    restart_policy: always
    recreate: yes
    timeout: "{{ DOCKER_TIMEOUT }}"
    ports:
      - "80:80"
      - "443:443"
      - "{{ TRAEFIK_FRONT_PORT }}:8080"
      - "{{ HOMEPAGE_FRONT_PORT }}:{{ HOMEPAGE_FRONT_PORT }}"
      - "{{ PORTAINER_PORT }}:{{ PORTAINER_PORT }}"
      - "{{ NETDATA_PORT }}:{{ NETDATA_PORT }}"
      - "{{ GOGS_FRONT_PORT }}:{{ GOGS_FRONT_PORT }}"
      - "{{ JENKINS_PORT }}:{{ JENKINS_PORT }}"
      - "{{ REDMINE_FRONT_PORT }}:{{ REDMINE_FRONT_PORT }}"
      - "{{ MQTT_FRONT_PORT }}:{{ MQTT_FRONT_PORT }}"
      - "{{ NODERED_FRONT_PORT }}:{{ NODERED_FRONT_PORT }}"
      - "{{ OCTOPRINT_PORT }}:{{ OCTOPRINT_PORT }}"
      - "{{ INSOLANTE_PORT }}:{{ INSOLANTE_PORT }}"
      - "{{ WORDPRESS_FRONT_PORT }}:{{ WORDPRESS_FRONT_PORT }}"
      - "{{ PEERTUBE_PORT }}:{{ PEERTUBE_PORT }}"
      - "{{ NEXUS_PORT }}:{{ NEXUS_PORT }}"
      - "{{ NEXUS_DOCKER_PULL_PORT }}:{{ NEXUS_DOCKER_PULL_PORT }}"
      - "{{ NEXUS_DOCKER_PUSH_PORT }}:{{ NEXUS_DOCKER_PUSH_PORT }}"
      - "{{ FDROID_PORT }}:{{ FDROID_PORT }}"
      - "{{ NEXTCLOUD_PORT }}:{{ NEXTCLOUD_PORT }}"
      - "{{ GROCY_PORT }}:{{ GROCY_PORT }}"
      - "{{ ODOO_PORT }}:{{ ODOO_PORT }}"
      - "{{ IT_TOOLS_PORT }}:{{ IT_TOOLS_PORT }}"
      - "{{ ONLYOFFICE_PORT }}:{{ ONLYOFFICE_PORT }}"
      - "{{ LABEL_STUDIO_PORT }}:{{ LABEL_STUDIO_PORT }}"
      - "{{ AUDIO_WEBUI_PORT }}:{{ AUDIO_WEBUI_PORT }}"
      - "{{ TEXT_WEBUI_PORT }}:{{ TEXT_WEBUI_PORT }}"
      - "{{ TEXT_WEBUI_API_PORT }}:{{ TEXT_WEBUI_API_PORT }}"
      - "{{ TEXT_WEBUI_STEAM_PORT }}:{{ TEXT_WEBUI_STEAM_PORT }}"
      - "{{ IMAGE_WEBUI_PORT }}:{{ IMAGE_WEBUI_PORT }}"
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock"
      - "/{{ DATACORE }}/traefik/certs/:/certs/"
      - "/{{ DATACORE }}/traefik:/etc/traefik"
    labels:
      traefik.enable: "false"

- name: "Sleep for 30 seconds to let traefik starts"
  ansible.builtin.wait_for: timeout=30
  delegate_to: 127.0.0.1

- name: "Make sure the certificate file has the correct rights"
  ansible.builtin.file:
    path: "/{{ DATACORE }}/traefik/certs/acme.json"
    owner: "root"
    group: "root"
    mode: 0600
  when: TRAEFIK_USE_LETSENCRYPT|bool
