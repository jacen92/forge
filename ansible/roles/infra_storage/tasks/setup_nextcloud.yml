---
- name: "Setup nextcloud directory"
  ansible.builtin.file:
    path: "{{ item }}"
    owner: "33"
    group: "33"
    state: directory
  with_items:
    - "/{{ DATACORE }}/nextcloud"
    - "/{{ DATACORE }}/nextcloud/apps"
    - "/{{ DATACORE }}/nextcloud/config"
    - "/{{ DATACORE }}/nextcloud/data"

- name: "start nextcloud container {{ NEXTCLOUD_VERSION }}"
  community.general.docker_container:
    name: "nextcloud"
    image: "nextcloud:{{ NEXTCLOUD_VERSION }}"
    state: "started"
    restart_policy: always
    recreate: yes
    timeout: "{{ DOCKER_TIMEOUT }}"
    env:
      SQLITE_DATABASE: "1"
      NEXTCLOUD_ADMIN_USER: "{{ DEFAULT_ADMIN_NAME }}"
      NEXTCLOUD_ADMIN_PASSWORD: "{{ NEXTCLOUD_PASS }}"
      NEXTCLOUD_TRUSTED_DOMAINS: "{{ NEXTCLOUD_URL_IN_CONFIG }} {{ NEXTCLOUD_EXTERNAL_URL }} localhost {{ inventory_hostname }} {{ DOMAIN_NAME }} {{ hostvars[inventory_hostname]['ansible_default_ipv4']['address'] }}"
    volumes:
      - "/{{ DATACORE }}/nextcloud:/var/www/html"
      - "/{{ DATACORE }}/nextcloud/apps:/var/www/html/custom_apps"
      - "/{{ DATACORE }}/nextcloud/config:/var/www/html/config"
      - "/{{ DATACORE }}/nextcloud/data:/var/www/html/data"

- name: "wait"
  ansible.builtin.pause:
    minutes: 3

- name: "Ensure the redirection from https to http is removed"
  ansible.builtin.lineinfile:
    path: "/{{ DATACORE }}/nextcloud/config/config.php"
    insertafter: "'htaccess.RewriteBase' => '/',"
    line: "'overwriteprotocol' => 'https',"

- name: "Launch nextcloud container {{ NEXTCLOUD_VERSION }}"
  community.general.docker_container:
    name: "nextcloud"
    image: "nextcloud:{{ NEXTCLOUD_VERSION }}"
    state: "{{NEXTCLOUD_DEFAULT_STATE }}"
    restart_policy: always
    recreate: yes
    timeout: "{{ DOCKER_TIMEOUT }}"
#    ports:
#      - "{{ NEXTCLOUD_PORT }}:80"
    env:
      SQLITE_DATABASE: "1"
      NEXTCLOUD_ADMIN_USER: "{{ DEFAULT_ADMIN_NAME }}"
      NEXTCLOUD_ADMIN_PASSWORD: "{{ NEXTCLOUD_PASS }}"
      NEXTCLOUD_TRUSTED_DOMAINS: "{{ NEXTCLOUD_URL_IN_CONFIG }} {{ NEXTCLOUD_EXTERNAL_URL }} localhost {{ inventory_hostname }} {{ DOMAIN_NAME }} {{ hostvars[inventory_hostname]['ansible_default_ipv4']['address'] }}"
    volumes:
      - "/{{ DATACORE }}/nextcloud:/var/www/html"
      - "/{{ DATACORE }}/nextcloud/apps:/var/www/html/custom_apps"
      - "/{{ DATACORE }}/nextcloud/config:/var/www/html/config"
      - "/{{ DATACORE }}/nextcloud/data:/var/www/html/data"
    labels:
      traefik.enable: "true"
      traefik.http.services.nextcloud.loadbalancer.server.port: "80"
      traefik.http.middlewares.https_redirect.redirectscheme.scheme: "https"
      traefik.http.routers.nextcloud_http.middlewares: "https_redirect"
      traefik.http.routers.nextcloud_http.rule: "Host(`{{ NEXTCLOUD_EXTERNAL_URL }}`)"
      traefik.http.routers.nextcloud_http.service: nextcloud
      traefik.http.routers.nextcloud_https.rule: "Host(`{{ NEXTCLOUD_EXTERNAL_URL }}`)"
      traefik.http.routers.nextcloud_https.service: nextcloud
      traefik.http.routers.nextcloud_https.tls: "true"
      # add this to use traefik as a proxy with tls (http will not be available)
      traefik.http.services.nextcloud_proxy.loadbalancer.server.port: "80"
      traefik.http.routers.nextcloud_proxy.service: nextcloud_proxy
      traefik.http.routers.nextcloud_proxy.entrypoints: nextcloud
      traefik.http.routers.nextcloud_proxy.rule: "{{ global_proxy_rule }}"
      traefik.http.routers.nextcloud_proxy.tls: "true"
