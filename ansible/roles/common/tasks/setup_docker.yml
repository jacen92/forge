---
- name: "Ensure docker.io is installed"
  ansible.builtin.apt:
    pkg: [docker.io]
    state: present
    update_cache: true
    cache_valid_time: 3600

- name: "Ensure obselete docker lib for python is removed"
  ansible.builtin.pip:
    executable: pip3
    state: absent
    name: [docker]

- name: "Ensure docker lib for python is installed"
  ansible.builtin.pip:
    executable: pip3
    state: present
    name: [docker-py]

- name: "Ensure docker timeouts are long enough (108000 = 30min)"
  ansible.builtin.lineinfile:
    path: '/etc/environment'
    line: "{{ item }}"
  loop:
    - "COMPOSE_HTTP_TIMEOUT={{ DOCKER_TIMEOUT }}"
    - "DOCKER_CLIENT_TIMEOUT={{ DOCKER_TIMEOUT }}"
    - "DOCKER_TIMEOUT={{ DOCKER_TIMEOUT }}"
  register: docker_update

- name: "Reload and restart service docker"
  ansible.builtin.service:
    name: docker
    state: restarted
    daemon_reload : yes
  when: docker_update.changed

- name: "Set ulimit to unlimited"
  ansible.builtin.shell: "ulimit -c unlimited"

- name: "HACK: add a cron job to force docker to start after a reboot"
  ansible.builtin.cron:
    name: "Force docker to start after reboot"
    special_time: reboot
    job: "docker ps -a"
