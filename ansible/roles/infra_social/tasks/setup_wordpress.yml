---
- name: "Setup wordpress database directory"
  ansible.builtin.file:
    path: "/{{ DATACORE }}/wordpress_db"
    owner: "{{ USER_NAME }}"
    group: "{{ USER_NAME }}"
    state: directory

- name: "Setup wordpress directory"
  ansible.builtin.file:
    path: "/{{ DATACORE }}/wordpress"
    owner: "{{ USER_NAME }}"
    group: "{{ USER_NAME }}"
    state: directory

- name: "Launch mysql container for wordpress"
  community.general.docker_container:
    name: "wordpress_db"
    image: "mariadb:{{ WORDPRESS_DB_VERSION }}"
    state: started
    restart_policy: always
    recreate: yes
    timeout: "{{ DOCKER_TIMEOUT }}"
    env:
      MYSQL_ROOT_HOST: "%"
      MYSQL_ROOT_PASSWORD: "{{ WORDPRESS_DB_PASS }}_root"
      MYSQL_PASSWORD: "{{ WORDPRESS_DB_PASS }}"
      MYSQL_DATABASE: "wordpress"
      MYSQL_USER: "wordpress"
    volumes:
      - "/{{ DATACORE }}/wordpress_db:/var/lib/mysql"

- name: "wait"
  ansible.builtin.pause:
    minutes: 5

- name: "Create wordpress container"
  community.general.docker_container:
    name: "wordpress"
    image: "wordpress:{{ WORDPRESS_VERSION }}"
    state: "{{ WORDPRESS_DEFAULT_STATE }}"
    restart_policy: always
    recreate: yes
    timeout: "{{ DOCKER_TIMEOUT }}"
    links:
      - wordpress_db:wordpress_db
#    ports:
#      - "{{ WORDPRESS_FRONT_PORT }}:80"
    env:
      WORDPRESS_DB_PASSWORD: "{{ WORDPRESS_DB_PASS }}"
      WORDPRESS_DB_HOST: "wordpress_db:3306"
      WORDPRESS_DB_USER: "wordpress"
      WORDPRESS_DB_NAME: "wordpress"
    volumes:
      - "/{{ DATACORE }}/wordpress:/var/www"
    labels:
      traefik.enable: "true"
      traefik.http.services.wordpress.loadbalancer.server.port: "80"
      traefik.http.middlewares.https_redirect.redirectscheme.scheme: "https"
      traefik.http.routers.wordpress_http.middlewares: "https_redirect"
      traefik.http.routers.wordpress_http.rule: "Host(`{{ WORDPRESS_EXTERNAL_URL }}`)"
      traefik.http.routers.wordpress_http.service: wordpress
      traefik.http.routers.wordpress_https.rule: "Host(`{{ WORDPRESS_EXTERNAL_URL }}`)"
      traefik.http.routers.wordpress_https.service: wordpress
      traefik.http.routers.wordpress_https.tls: "true"
      # add this to use traefik as a proxy with tls (http will not be available)
      traefik.http.services.wordpress_proxy.loadbalancer.server.port: "80"
      traefik.http.routers.wordpress_proxy.service: wordpress_proxy
      traefik.http.routers.wordpress_proxy.entrypoints: wordpress
      traefik.http.routers.wordpress_proxy.rule: "{{ global_proxy_rule }}"
      traefik.http.routers.wordpress_proxy.tls: "true"
